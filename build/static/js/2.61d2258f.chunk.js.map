{"version":3,"sources":["components/Order/Order.module.css","components/Order/Order.js","containers/Orders/Orders.js"],"names":["module","exports","Order","order","props","ingredients","ingName","push","name","amount","ingOutput","map","ig","react_default","a","createElement","style","textTransform","display","margin","border","padding","key","className","classes","Number","parseFloat","price","toFixed","Orders","this","onFetchedOrders","token","userId","r","Spinner","loading","orders","id","Component","connect","state","auth","dispatch","actions","withErrorHandler","axios"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,MAAA,gJCkCHC,EAhCD,SAACC,GACX,IAAMC,EAAc,GAEpB,IAAI,IAAIC,KAAWF,EAAMC,YAErBA,EAAYE,KAAK,CACbC,KAAMF,EACNG,OAAQL,EAAMC,YAAYC,KAIlC,IAAMI,EAAYL,EAAYM,IAC1B,SAAAC,GACI,OAAOC,EAAAC,EAAAC,cAAA,QACPC,MAAO,CAACC,cAAe,aACfC,QAAS,eACTC,OAAQ,QACRC,OAAQ,iBACRC,QAAS,OAEjBC,IAAKV,EAAGJ,MAAOI,EAAGJ,KAPX,KAOmBI,EAAGH,OAPtB,OAWf,OACII,EAAAC,EAAAC,cAAA,OAAKQ,UAAWC,IAAQtB,OACpBW,EAAAC,EAAAC,cAAA,yBAAiBL,GACjBG,EAAAC,EAAAC,cAAA,mBAAUF,EAAAC,EAAAC,cAAA,kBAAUU,OAAOC,WAAWtB,EAAMuB,OAAOC,QAAQ,uCCtBjEC,8LAGEC,KAAK1B,MAAM2B,gBAAgBD,KAAK1B,MAAM4B,MAAMF,KAAK1B,MAAM6B,yCAMvD,IAAIC,EAAIrB,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAACoB,EAAA,EAAD,OAab,OAXIL,KAAK1B,MAAMgC,UAEXF,EAAKrB,EAAAC,EAAAC,cAAA,WACAe,KAAK1B,MAAMiC,OAAO1B,IACf,SAAAR,GAAK,OACDU,EAAAC,EAAAC,cAACb,EAAD,CAAOoB,IAAKnB,EAAMmC,GAAIjC,YAAaF,EAAME,YAAasB,MAAOxB,EAAMwB,YAO/Ed,EAAAC,EAAAC,cAAA,WACKmB,UAxBIK,aA+CNC,sBAfS,SAAAC,GACpB,MAAO,CACHJ,OAAQI,EAAMtC,MAAMkC,OACpBD,QAASK,EAAMtC,MAAMiC,QACrBJ,MAAOS,EAAMC,KAAKV,MAClBC,OAAQQ,EAAMC,KAAKT,SAIA,SAAAU,GACvB,MAAO,CACHZ,gBAAiB,SAACC,EAAOC,GAAR,OAAmBU,EAASC,IAAoBZ,EAAOC,OAIjEO,CAA6CK,YAAiBhB,EAAQiB","file":"static/js/2.61d2258f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__1l0Y4\"};","import React from 'react';\r\nimport classes from './Order.module.css';\r\n\r\nconst order = (props) => {\r\n    const ingredients = [];\r\n\r\n    for(let ingName in props.ingredients)\r\n    {\r\n        ingredients.push({\r\n            name: ingName,\r\n            amount: props.ingredients[ingName]\r\n        })\r\n    }\r\n\r\n    const ingOutput = ingredients.map(\r\n        ig => {\r\n            return <span\r\n            style={{textTransform: \"capitalize\", \r\n                    display: \"inline-block\",\r\n                    margin: '0 8px',\r\n                    border: '1px solid #ccc',\r\n                    padding: '5px'\r\n        }} \r\n            key={ig.name}>{ig.name} ({ig.amount})</span>;\r\n        }\r\n    );\r\n\r\n    return (\r\n        <div className={classes.Order}> \r\n            <p>Ingredients: {ingOutput}</p>\r\n            <p>Price: <strong>${Number.parseFloat(props.price).toFixed(2)}</strong></p>\r\n        </div>\r\n    );\r\n} \r\n\r\nexport default order;","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Order from '../../components/Order/Order';\r\nimport axios from '../../Axios-orders';\r\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\"\r\nimport * as actions from '../../store/actions/index'\r\nimport Spinner from '../../components/UI/Spinner/Spinner'\r\n\r\nclass Orders extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.onFetchedOrders(this.props.token,this.props.userId)\r\n    }\r\n\r\n\r\n    render () {\r\n\r\n        let r = <div><Spinner /></div>\r\n\r\n        if(!this.props.loading)\r\n        {\r\n            r = (<div>\r\n                {this.props.orders.map(\r\n                    order => (\r\n                        <Order key={order.id} ingredients={order.ingredients} price={order.price}/>\r\n                    )\r\n                )}\r\n            </div>)\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {r}\r\n            </div>\r\n            \r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        orders: state.order.orders,\r\n        loading: state.order.loading,\r\n        token: state.auth.token,\r\n        userId: state.auth.userId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchedOrders: (token, userId) => dispatch(actions.fetchOrders(token, userId))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));"],"sourceRoot":""}